.stage {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
  background-color: #333;
  /*
  공간 자체에 3D 효과 옵션을 설정하면
  오브젝트마다 균일하지 않게 3D 효과를 적용함
  perspective: 800px;
  */
}
.door {
  position: relative;
  width: 100px;
  height: 150px;
}
.door-back {
  overflow: hidden;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: black;
}
.ilbuni {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100px;
  height: 100px;
  background-repeat: no-repeat;
  background-position: center bottom;
  background-size: contain;
  transform: translate3d(100%, 0, 0);
  transition-duration: 0.5s;
  transition-delay: 0.5s;
}
.door-opened .ilbuni {
  transform: translate3d(0, 0, 0);
}
.door:nth-child(1) .ilbuni {
  background-color: green;
}
.door:nth-child(2) .ilbuni {
  background-color: purple;
}
.door:nth-child(3) .ilbuni {
  background-color: blue;
}
.door-body {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  transition: 0.4s;
  transform-origin: left;
}
.door-opened .door-body {
  /* 3D 효과가 필요한 오브젝트 자체에 perspective() 옵션을 설정하면
  오브젝트마다 균일하게 효과를 적용함 */
  transform: perspective(800px) rotateY(-110deg);
}
.door:nth-child(1) .door-body {
  background: rgba(255, 0, 0, 0.7);
}
.door:nth-child(2) .door-body {
  background: rgba(0, 255, 0, 0.7);
}
.door:nth-child(3) .door-body {
  background: rgba(0, 0, 255, 0.7);
}
